<?php
class file_info{
	public function __construct($inPath){
		return;
		$conf = SConfig::getConfig(ROOT_CONFIG."/security.conf","file");
		if(empty($conf->allow)){
			header("HTTP/1.0 404 Not Found");
			exit;
		}
		if(is_array($conf->allow)){
			if(!in_array($_SERVER['REMOTE_ADDR'],$conf->allow)){
				header("HTTP/1.0 404 Not Found");
				exit;
			}
		}elseif($_SERVER['REMOTE_ADDR']!=$conf->allow){
			header("HTTP/1.0 404 Not Found");
			exit;
		}
	}
	public function pageSet($inPath){
		$params=SJson::decode(utility_net::getPostData());
		$ret = new stdclass;
		$ret->result =  new stdclass;
		$ret->result->code=-1;
		if(empty($params->fid) || empty($params->size) || empty($params->url) || empty($params->publicUrl)){
			$ret->result->msg='参数错误';
			return $ret;
		}
		$db = new file_db;
		$info=array();
		$info['fid']=$params->fid;
		$info['size']=$params->size;
		$info['fk_user']=$params->uid;
		$type=0;
		if(empty($params->type)){
			$type=0;
		}
		switch($params->type){
		case "image":	$type=1;	break;
		case "flash":	$type=2;	break;
		case "audio":	$type=3;	break;
		case "video":	$type=4;	break;
		case "doc":		$type=5;	break;
		case "pdf":		$type=6;	break;
		default:$type = 0;
		}
		$info['type']=$type;
		$info['name']=$params->name;
		$volume_r=explode(",",$info['fid']);
		if(count($volume_r)>1){
			$info['fk_volume']=$volume_r[0];
		}
		if(isset($params->pk_file)){ $info['pk_file']=$params->pk_file; }
		if(isset($params->status)){ $info['status']=$params->status; }
		$db_ret = $db->addFile($info);
		if($db_ret!==false){
			$ret->result->code=0;
			$ret->result->msg='ok';
		}else{
			$ret->result->code=-2;
			$ret->result->msg='db write error';
		}
		//更新volume
		$Volume=array();
		$Volume['pk_volume']=$info['fk_volume'];
		$Volume['url']=$params->url;
		$Volume['publicUrl']=$params->publicUrl;
		$db->addVolume($Volume);
		return $ret;
	}
	public function pageList($inPath){
		$params=SJson::decode(utility_net::getPostData());
		$ret = new stdclass;
		if(empty($params->uid) || empty($params->type)){
			$ret->result =  new stdclass;
			$ret->result->code=-1;
			$ret->result->msg='参数错误';
			return $ret;
		}
		$page=!empty($inPath[3])?$inPath[3]:1;
		$size=!empty($inPath[4])?$inPath[4]:20;
		$type=0;
		if(empty($params->type)){
			$type=0;
		}
		switch($params->type){
		case "image":	$type=1;	break;
		case "flash":	$type=2;	break;
		case "audio":	$type=3;	break;
		case "video":	$type=4;	break;
		case "doc":		$type=5;	break;
		case "pdf":		$type=6;	break;
		default:$type = 0;
		}
		$db = new file_db;
		$data = $db->listFile($params->uid,$type,$page,$size);
		$ret->data=array();
		if(!empty($data->items)){
			$ret->size = $data->totalSize;
			$ret->page = $data->totalPage;
			foreach($data->items as $item){
				$ret->data[]=array("fid"=>$item['fid'],"name"=>$item['name'],"type"=>$item['type'],"size"=>$item['size']);
			}
		}
		return $ret;
	}
}

