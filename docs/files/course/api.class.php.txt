<?php
class course_api{

	private static $course_resource = array(
		'course_id' => '',	
		'cate_id' => '',	
		'user_id' => '',	
		'title' => '',	
		'tags' => '',	
		'descript' => '',	
		'start_time' => '',	
		'create_time' => '',	
		'end_time' => '',	
		'max_user' => '',	
		'min_user' => '',	
		'user_total' => '',	
		'system_status' =>'',	
		'status' =>'',	
		'thumb_big'=>"",
		'thumb_med'=>"",
		'thumb_small'=>"",
		'public_type'=>"",
		'fee_type'=>"",
		'admin_status'=>"",
		'last_updated'=>"",
	);
	private static $course_resmp = array(
		'basic' => array(
			'course_id' => 'pk_course',	
			'cate_id' => 'fk_cate',	
			'user_id' => 'fk_user',	
			'grade_id' => 'fk_grade',	
			'type_id' => 'fk_type',	
			'title' => 'title',	
			'tags' => 'tags',	
			'descript' => 'descript',	
			'start_time' => 'start_time',	
			'create_time' => 'create_time',	
			'end_time' => 'end_time',	
			'max_user' => 'max_user',	
			'min_user' => 'min_user',	
			'user_total' => 'user_total',	
			'system_status' => array(1=>'nostart',2=>'starting',3=>'over'),	
			'status' => array(1 => 'normal', -1 => 'pause',0=> 'over'),	
			'thumb_big' => 'thumb_big',	
			'thumb_med' => 'thumb_med',	
			'thumb_small' => 'thumb_small',	
			'public_type' => 'public_type',	
			'fee_type' => 'fee_type',	
			'admin_status' => 'admin_status',	
			'status' => 'status',	
			'last_updated' => 'last_updated',	
		),
		"fee"=>array(
			"price"=>"price",
			"price_market"=>"price_market",
		),
	);
	public function genId($uid){
		$db = new course_db;
		$maxId = $db->getMaxCourseIdByUid($uid);
		if($maxId===false)return false;
		$course = $db->getCourse($maxId);
		if($maxId===0 || !empty($course['title'])){
			//新增一个
			$course=array();
			$course['fk_user']=$uid;
			$course['status']=0;
			$time = date("Y-m-d H:i:s");
			$course['create_time']= $time;
			$courseId = $db->addCourse($course);
			if($courseId)return $courseId;
		}
		return $maxId;
	}
	//添加一个空的classid·
	public function genclassId($course_id){
		$db = new course_db;
		$maxId = $db->getMaxClassIdBycid($course_id);
		if($maxId===false)return false;
		$class = $db->getClass($maxId);
		if($maxId===0 || !empty($class['name'])){
			//新增一个
			$class=array();
			$class['fk_course']=$course_id;
			$class['type']="1";


			$time = date("Y-m-d H:i:s");
			$class['create_time']= $time;
			$class['last_updated']= $time;
			$retclass = $db->addClass($class);
			if($retclass)return $retclass;
		}
		return $maxId;
	}
	public function update($course_id,$coursein){
		$course_db = new course_db;
		$course_id = (int)$course_id;
		$course_db->updateCourse($course_id,$coursein);	

		return $course_db;
	}		



	/**
	 * 获取课程信息
	 * @param int $uid 课程ID
	 * @return boolean|array
	 */
	public function get($course_id){
		if (empty($course_id)){
			return false;		
		}
		$course_db = new course_db();
		$user_db = new user_db();
		$basic_data = $course_db->getCourse($course_id);
		$user_id	 = $basic_data["fk_user"];
		//获取用户信息
		$user_get = $user_db->getUser($user_id);
		$username = $user_get["name"];
		if (empty($basic_data)) {
			return array(
				"code" => '-102',
			);	
		}
		$course = self::$course_resource;
		foreach (self::$course_resmp['basic'] as $k => $v) {
			if (is_array($v)) {
				//如果是数组的话
				if (isset($v[$basic_data[$k]])) {
					//如果basic_data的这个key有值把这个值赋值到$user[k]中
					$course[$k] = $v[$basic_data[$k]];
				}
			} else {
				if (isset($basic_data[$v])) {
					$course[$k] = $basic_data[$v];
				}
			}
		}
		$course['fee'] = new stdclass;
		if($course['fee_type']){
			$fee = $course_db->getfee($course['course_id']);
			if($fee){
				$course['fee']->price = $fee['price'];
				$course['fee']->price_market= $fee['price_market'];
			}
		}
		$course['user']['username']=$username;
        $sort=$course_db->getSort($course['course_id']);
        $course['sort']=$sort?$sort['sort']:0;
		return $course;
	}
	/*
	 *获取一个班级信息
	 */
	public function getclass($class_id){
		if (empty($class_id)){
			return false;		
		}
		$class_key_array = array(
			"pk_class"=>"class_id",
			"fk_user"=>"user_id",
			"fk_user_class"=>"user_class_id",
			"fk_course"=>"course_id",
			"name"=>"name",
			"descript"=>"descript",
			"type"=>"type",
			"max_user"=>"max_user",
			"min_user"=>"min_user",
			"user_total"=>"user_total",
			"status"=>"status",
		);
		$course_db = new course_db();
		$get_class_data = $course_db->getclass($class_id);
		if (empty($get_class_data)) {
			return array(
				"code" => '-102',
			);	
		}
		foreach ($class_key_array as $k => $v) {
			$ret[$v] = $get_class_data[$k];
		}
		$ret['status'] = course_status::name($ret['status']);
		return $ret;
	}
	/*
	 *获取课程分类 比如语文数学
	 */
	public function getlist(){
		$course_db = new course_db();
		$catelist = $course_db->catelist()->items;
		if($catelist === false) return false;	
		$count = count($catelist);
		for($i = 0;$i<$count;$i++){
			$relist[$i]["cate_id"]=$catelist[$i]["pk_cate"];
			$relist[$i]["name"]=$catelist[$i]["name"];
			$relist[$i]["last_updated"]=$catelist[$i]["last_updated"];
		}
		if(empty($relist)){$relist = 0;}
		$ret = new stdClass;
		$ret->data = $relist;
		return $ret;
	}

	/*
	 *获取所有年级信息
	 */
	public function getgradelist(){
		$course_db = new course_db();
		$gradelist = $course_db->gradelist()->items;
		if($gradelist === false) return false;	
		$count = count($gradelist);
		for($i = 0;$i<$count;$i++){
			$relist[$i]["grade_id"]=$gradelist[$i]["pk_grade"];
			$relist[$i]["name"]=$gradelist[$i]["name"];
			$relist[$i]["last_updated"]=$gradelist[$i]["last_updated"];
		}
		if(empty($relist)){$relist = 0;}
		$ret = new stdClass;
		$ret->data = $relist;
		return $ret;
	}
	/*
	 *增加章节信息
	 */
	public function addsection($cid,$section){
		$array_section =array(
			"name"=>"name",
			"descript"=>"descript",
		);
		$time = date("Y-m-d H:i:s");
		foreach($array_section as $key=>$value){
			$secdata[$key] = $section[$value];
		}
		$course_db = new course_db;
		$secdata["fk_course"] = $cid;
		$secdata["status"] = empty($section["status"]) ? '1':$section["status"];
		$secdata["last_updated"] = $time;
		$secdata["create_time"] = $time;
		$ret = $course_db->addsection($secdata);	
		return $ret;
	}

	/*
	 * 删除章节信息
	 */
	public function delSection($sid,$cid){
		$sid = (int)$sid;
		$cid = (int)$cid;
//				define("DEBUG",true);
		$course_db = new course_db;
		$ret = $course_db->delSection($sid,$cid);
		$retc = $course_db->delPlan($cid,$class_id = null,$sid);
		$ret_sec = course_live::del_section_change_course($sid);
		return $retc;
//		return $ret_sec;
	}
	/*
	 *删除班级信息
	 */
	public function delClass($cid,$class_id,$sid=null){
		$class_id = (int)$class_id;
		$cid = (int)$cid;
		$course_db = new course_db;
		//	define("DEBUG",true);
		$list_reg1 = $course_db->ListRegistration($cid,$class_id);
		if(empty($list_reg1->items)){
			$retc = $course_db->delClass($class_id);
			$rets = $course_db->delPlan($cid,$class_id);
			$ret_class = course_live::del_class_change_course($class_id);
			return $rets;
		}else{
			return "failed";
		}
	}

	/*
	 *获取所有章节信息
	 */
	public function getsectionlist($course_id){
		$course_id = (int)$course_id;
		//$array_status = array("禁用","未开始","开始中","已经结束",);
		$course_db = new course_db();
		$sectionlist = $course_db->sectionlist($course_id)->items;
		if($sectionlist === false) return false;	
		$count = count($sectionlist);
		for($i = 0;$i<$count;$i++){
			$relist[$i]["section_id"]=$sectionlist[$i]["pk_section"];
			$relist[$i]["name"]=$sectionlist[$i]["name"];
			$relist[$i]["course_id"]=$sectionlist[$i]["fk_course"];
			$relist[$i]["order_no"]=$sectionlist[$i]["order_no"];
			$relist[$i]["create_time"]=$sectionlist[$i]["create_time"];
			$relist[$i]["last_updated"]=$sectionlist[$i]["last_updated"];
			$relist[$i]["descript"]=$sectionlist[$i]["descript"];//new
			$relist[$i]["status"]=course_status::name($sectionlist[$i]["status"]);
		}
		if(empty($relist)){$relist = 0;}
		$ret = new stdClass;
		$ret->data = $relist;
		return $ret;
	}
	/*
	 *更新章节信息
	 */
	public function updatesection($section_id,$section){
		$course_db = new course_db;
		$section_id = (int)$section_id;
		$course_db->updateSection($section_id,$section);	

		return $course_db;
	}		
	/*
	 *增加班级
	 */
	public function addclass($cid,$dclass){
		$time = date("Y-m-d H:i:s");
		$course_db = new course_db;
		$class["fk_user_class"] = $dclass["user_class_id"];
		$class["fk_user"] = $dclass["user_id"];
		$class["fk_course"] = $cid;
		//		$class["fk_class"] = $dclass["class_id"];
		$class["name"] = $dclass["name"];
		//		$class["descript"] = $dclass["descript"];
		$class["type"] = $dclass["type"];//1大班2小班
		$class["max_user"] = empty($dclass["max_user"]) ? '50':$dclass["max_user"];
		$class["min_user"] = empty($dclass["min_user"]) ? '50':$dclass["min_user"];
		//		$class["user_total"] = $class["user_total"];
		$class["status"] = empty($dclass["status"]) ? '1':$dclass["status"];
		$class["last_updated"] = $time;
		$class["create_time"] = $time;
		$ret = $course_db->addclass($class);	
		return $ret;
	}

	/*
	 *列取班级信息
	 */
	public function getclasslist($course_id){
		$course_id = (int)$course_id;
		$array_type = array("1"=>"大班","2"=>"小班",);
		$course_db = new course_db();
		$user_db = new user_db();
		$classlist = $course_db->classlist($course_id)->items;
		if($classlist === false) return false;	
		$count = count($classlist);
		for($i = 0;$i<$count;$i++){
			$relist[$i]["class_id"]=$classlist[$i]["pk_class"];
			$relist[$i]["name"]=$classlist[$i]["name"];
			$relist[$i]["course_id"]=$classlist[$i]["fk_course"];
			$relist[$i]["type"]=$array_type[$classlist[$i]["type"]];
			$relist[$i]["max_user"]=$classlist[$i]["max_user"];
			$relist[$i]["min_user"]=$classlist[$i]["min_user"];
			$relist[$i]["descript"]=$classlist[$i]["descript"];
			$relist[$i]["user_total"]=$classlist[$i]["user_total"];
			$relist[$i]["teacher_id"]=$classlist[$i]["fk_user_class"];
			$relist[$i]["teacher"]=$user_db->getBasicUser($classlist[$i]["fk_user_class"]);
			$relist[$i]["create_time"]=$classlist[$i]["create_time"];
			$relist[$i]["last_updated"]=$classlist[$i]["last_updated"];
			$relist[$i]["status"]=course_status::name($classlist[$i]["status"]);
			$class_id = $classlist[$i]["pk_class"];
		}
		if(empty($relist)){$relist = 0;}
		$ret = new stdClass;
		$ret->data = $relist;
		return $ret;
	}
	/*
	 *更新班级信息
	 */
	public function updateclass($class_id,$class){
		$course_db = new course_db;
		$class_id = (int)$class_id;
		$ret=$course_db->updateclass($class_id,$class);	
		return $ret;
	}

	/*
	 *更新排课信息
	 */
	public function updateplan($cid,$sid,$class_id,$plan){
		$course_db = new course_db;
		//	$pid = (int)$pid;
		$ret = $course_db->updateplan($cid,$sid,$class_id,$plan);	
		return $ret;
	}
	/*
	 *增加排课信息
	 */
	public function addplan($plan){
		$time = date("Y-m-d H:i:s");
		$course_db = new course_db;
		$iplan["fk_user"] = $plan["user_id"];
		$iplan["fk_user_plan"] = $plan["user_plan_id"];//讲课老师
		$iplan["fk_course"] = $plan["course_id"];
		$iplan["fk_section"] = $plan["section_id"];
		$iplan["fk_class"] = $plan["class_id"];
		$iplan["live_public_type"] = $plan["live_public_type"];
		$iplan["video_public_type"] = $plan["video_public_type"];
		$iplan["video_trial_time"] = $plan["video_trial_time"];
		//		$iplan["end_time"] = $plan["end_time"];
		$iplan["status"] = 1;
		$iplan["start_time"] = $plan["start_time"];
		$iplan["last_updated"] = $time;
		$iplan["create_time"] = $time;
		$ret = $course_db->addplan($iplan);	
		$course_status = course_live::add_plan_change_course($plan["course_id"]);
		return $ret;
	}	
	/*
	 *获取排课信息 
	 *				$cid   	课程id  
	 *				$page   页数
	 *				$length 每页显示个数
	 */
	public function getlistplan($cid,$orgUserId,$class_id,$user_plan_id,$section_id,$plan_id,$week,$allcourse,$order_by,$page,$length){
		$course_db = new course_db();
		$listplan1 = $course_db->planlist($cid,$orgUserId,$class_id,$user_plan_id,$section_id,$plan_id,$week,$allcourse,$order_by,$page,$length);
		if($listplan1 === false) return false;
		$listplan = $listplan1->items;
		$user_db = new user_db();
		if($listplan === false) return false;	
		//{{{计算老师信息
		$uids=array();
		foreach($listplan as &$item){
			$uids[]=$item['fk_user_class'];
			$uids[]=$item['fk_user_plan'];
		}
		$user_infos_tmp = $user_db->getStudentUsers($uids);
		if($user_infos_tmp === false){
            return false;
        }	
		foreach($user_infos_tmp as $tmp){
			$id = $tmp['user_id'];
				$user_info[$id]=$tmp;
		}
		//}}}
		foreach($listplan as &$plan){
			//机构只需要获取一次
			if(empty($org_user)){
				$org_user=$user_db->getOrgByUid($plan['fk_user_course']);
			}
			$plan['plan_status'] = course_status::name($plan['plan_status']);
			$plan['course_status'] = course_status::name($plan['course_status']);
			$plan['section_status'] = course_status::name($plan['section_status']);
			$plan['user_course']= $org_user;
			$plan['price']= $plan['price']/100;
			$plan['price_market']= $plan['price_market']/100;
			$tmp_id = $plan['fk_user_class'];
			$plan['user_class']= $user_info[$tmp_id];			//获得班主任信息
			$tmp_id = $plan['fk_user_plan'];
			$plan['user_plan']= $user_info[$tmp_id];			//获得班主任信息
			$plan['user_plan_id'] = $plan['fk_user_plan'];
			$plan['user_class_id'] = $plan['fk_user_class'];
		}
		$ret = new stdClass;
		$ret->data = $listplan;
		$ret->page = $listplan1->page;
		$ret->size = $listplan1->pageSize;
		$ret->total = $listplan1->totalPage;
		return $ret;
	}
	public function planCourseGroup($user_plan_id,$order_by,$page = null,$length = null){
		$course_db = new course_db();
	// 	define("DEBUG",true);
		$listplan1 = $course_db->planCourseGroup($user_plan_id,$order_by,$page,$length);
		$listplan = $listplan1->items;
		$ret = new stdClass;
		if(empty($listplan)){$listplan = 0;}
		$ret->data = $listplan;
		$ret->page = $listplan1->page;
		$ret->size = $listplan1->pageSize;
		$ret->total = $listplan1->totalPage;
		return $ret;
	}
	/*
	 *获取所有的课程信息
	 *
	 */
	public function getcourselist($page = 1,$length = 4,$fee,$oid,$grade_id,$status,$week,$shelf){
		$course_db	 = new course_db();
		$courselist1 = $course_db->courselist($page,$length,$fee,$oid,$grade_id,$status,$week,$shelf);
		if(empty($courselist1->items)){
			return false;
		}
		$courselist  = $courselist1->items;
		$user_db	 = new user_db();
		$count = count($courselist);

		//{{{ for redis cache
		redis_api::useConfig("db_course");
		$course_ids =array();
		foreach($courselist as $course){
			$tmpid = $course['pk_course'];
			$course_ids[]="course_api::getcourselist.{$course['pk_course']}";
		}
		$relist=redis_api::mGet($course_ids);
		$allflag=true;
		if($allflag){
			foreach($relist as $list){
				if($list===false){ $allflag  = false;break;}
			}
		}
		//}}}
		if($allflag===false){
			$relist=array();
			for($i = 0;$i<$count;$i++){
				$user_id	 = $courselist[$i]["fk_user"];
				//获取用户信息
				$user_get = $user_db->getUser($user_id);
				$username = $user_get["name"];
				//获取创建者信息
				$userinfo = $user_db->getOrgByUid($user_id);		
				$org_name	 = $username;//$org_info["name"];
				$org_id 	 = $user_id ;//org_info["oid"];
				//获取完毕

				//获取课程旗下的所有班级信息	

				$course_id=	$courselist[$i]["pk_course"];
				$classlist = $course_db->classList($course_id)->items;
				$cllist=array();
				if(!empty($classlist)){
					$count_2 = count($classlist);
					for($j = 0;$j<$count_2;$j++){
						$cllist[$j]["class_id"]=$classlist[$j]["pk_class"];
						$cllist[$j]["name"]=$classlist[$j]["name"];
						//获取班主任信息
						$cllist[$j]["user_id"]=$classlist[$j]["fk_user_class"];
						$teacher =$user_db->getBasicUser($classlist[$j]['fk_user_class']);
						$cllist[$j]["teacher"]=$teacher;
						$cllist[$j]["user_name"]=$teacher['name'];
					}
				}

				$price = $price_market = 0;

				$relist[$i]["course_id"]=	$courselist[$i]["pk_course"];
				$relist[$i]["cate_id"]=		$courselist[$i]["fk_cate"];
				$relist[$i]["type_id"]=		$courselist[$i]["fk_type"];
				$relist[$i]["grade_id"]=	$courselist[$i]["fk_grade"];
				$relist[$i]["user_id"]=		$courselist[$i]["fk_user"];
				$relist[$i]["title"]=		$courselist[$i]["title"];
				$relist[$i]["tags"]=		$courselist[$i]["tags"];
				$relist[$i]["descript"]=	$courselist[$i]["descript"];
				$relist[$i]["thumb_big"]=	$courselist[$i]["thumb_big"];
				$relist[$i]["thumb_med"]=	$courselist[$i]["thumb_med"];
				$relist[$i]["thumb_small"]=	$courselist[$i]["thumb_small"];
				$relist[$i]["start_time"]=	$courselist[$i]["start_time"];
				$relist[$i]["end_time"]=	$courselist[$i]["end_time"];
				$relist[$i]["public_type"]=	$courselist[$i]["public_type"];
				$relist[$i]["fee_type"]=	$courselist[$i]["fee_type"];
				$relist[$i]["user_total"]=	$courselist[$i]["user_total"];
				$relist[$i]["max_user"]=	$courselist[$i]["max_user"];
				$relist[$i]["min_user"]=	$courselist[$i]["min_user"];
				$relist[$i]["status"]=		course_status::name($courselist[$i]["status"]);
				$relist[$i]["top"]=	$courselist[$i]["top"];
				$relist[$i]["admin_status"]=course_adminstatus::name($courselist[$i]["admin_status"]);
				$relist[$i]["create_time"]=	$courselist[$i]["create_time"];
				$relist[$i]["last_updated"]=$courselist[$i]["last_updated"];
				$relist[$i]["user"]["user_name"]=        $username;
				//{{{如果是收费
				if($courselist[$i]["fee_type"]>0){
					$relist[$i]["fee"]["price"]=     		 $courselist[$i]["price"]/100;
					$relist[$i]["fee"]["price_market"]=      $courselist[$i]["price_market"]/100;
				}else{
					$relist[$i]["fee"]["price"]=     		 0;
					$relist[$i]["fee"]["price_market"]=      0;
				}
				//}}}
				$relist[$i]["user"]["user_id"]=	$user_id;
				$relist[$i]["org"]["org_id"]=	$org_id;
				$relist[$i]["org"]["org_name"]=	$org_name;
				$relist[$i]["class"]=	$cllist;
				$relist[$i]['sort']=$courselist[$i]['sort'];
			}
			if(empty($relist)){
				$relist = 0;
			}else{
				//{{{
				$cache_data=array();
				foreach($relist as $i=>$course){
					$key = "course_api::getcourselist.{$course['course_id']}";
					$cache_data[$key]=$course;

				}
				redis_api::mSet($cache_data);
				//}}}
			}
		}else{
		}
		$ret = new stdClass;
		$ret->data = $relist;
		$ret->page = $courselist1->page;
		$ret->size = $courselist1->pageSize;
		$ret->total = $courselist1->totalPage;
		return $ret;

	}
	/*
	 *获取机构信息 
	 *				$oid    机构id  
	 *				$page   页数
	 *				$length 每页显示个数
	 */
	public function getlistorg($oid = null,$page = null,$length = null){
		$user_db = new user_db();
		$list_org1 = $user_db->listorg($oid,$page,$length);
		$list_org = $list_org1->items;
		if($listorg === false) return false;	
		$count = count($listorg);
		for($i = 0;$i<$count;$i++){
			$relist[$i]["org_id"]=  	$listorg[$i]["pk_org"];
			$relist[$i]["user_owner"]=	$listorg[$i]["fk_user_owner"];
			$relist[$i]["namme"]=		$listorg[$i]["name"];
			$relist[$i]["thumb_big"]=	$listorg[$i]["thumb_big"];
			$relist[$i]["thumb_med"]=	$listorg[$i]["thumb_med"];
			$relist[$i]["thumb_small"]=	$listorg[$i]["thumb_small"];
			$relist[$i]["desc"]=	$listorg[$i]["desc"];
			$relist[$i]["status"]=		$listorg[$i]["status"];
			$relist[$i]["create_time"]=	$listorg[$i]["create_time"];
			$relist[$i]["last_updated"]=$listorg[$i]["last_updated"];
			//			$relist[$i]["status"]=$array_status[$listorg[$i]["status"]];
			// "admin_status",这个字段数据库没有 意义：管理员审核状态
		}
		$ret = new stdClass;
		if(empty($relist)){$relist = 0;}
		$ret->data = $relist;
		$ret->page = $listorg1->page;
		$ret->size = $listorg1->pageSize;
		$ret->total = $listorg1->totalPage;
		return $ret;
	}
	private	static $reg_array = array(
		//	"pk_course_user"=>"course_user_id",
		"fk_course"=>"course_id",
		"fk_user"=>"uid",
		"fk_class"=>"class_id",
		"status"=>"status",
		//	"create_time"=>"create_time",
		//	"last_updated"=>"last_updated",
	);
	public function addRegistration($reg_data){
		$course_db = new course_db;
		return  $course_db->addRegistration($reg_data);	
	}	
	/*
	 * 调班，需要修正报名用户数
	 */
	public function updateRegClass($course_user_id,$upregdata){
		$course_db = new course_db;
		$course_db->updateregclass($course_user_id,$upregdata);	

		return $course_db;
	}		
	public function listRegistration($course_id,$class_id,$uid,$page = null,$length = null){
		$course_db = new course_db();
		$user_db = new user_db();
		$zxcity = array("北京","上海","重庆","天津");
		$list_reg1 = $course_db->ListRegistration($course_id,$class_id,$uid,$page,$length);
		if(empty($list_reg1->items))return false;
		$uids=array();
		foreach($list_reg1->items as &$item){
			$uids[]=$item['uid'];
		}
		$user_infos = $user_db->getStudentUsers($uids);
		foreach($list_reg1->items as &$item){
			foreach($user_infos as $user_info){
				if($user_info['user_id']==$item['uid'])
					$item['user_info']=$user_info;
			}
		}
		$list_reg = $list_reg1->items;
		$ret = new stdClass;
		if(empty($list_reg)){$list_reg = 0;}
		$ret->data = $list_reg;
		$ret->page = $list_reg1->page;
		$ret->size = $list_reg1->pageSize;
		$ret->total = $list_reg1->totalPage;
		return $ret;
	}
	public function listPlanUser($plan_id){
		$course_db = new course_db();
		return $course_db->listPlanUser($plan_id);
	}

	public function updateFeeOrderStatus($order_id,$status){
		$course_db = new course_db();
		$set_status = $course_db->updateFeeOrderStatus($order_id,$status);
		return $set_status;
	}

	public function getFeeOrder($user_id,$course_id,$fee_order_id){
		$course_db = new course_db();
		$get_fee_order_data = $course_db->getFeeOrder($user_id,$course_id,$fee_order_id);
		if (empty($get_fee_order_data)) {
			return array(
				"code" => '-102',
				"msg" => 'empty!',
			);	
		}
		return $get_fee_order_data;
	}
	public function listFeeOrder($user_id,$course_id,$fee_order_id,$status,$page,$length){
		$course_db = new course_db();
		$list_fee_order_data = $course_db->listFeeOrder($user_id,$course_id,$fee_order_id,$status,$page,$length);
		if (empty($list_fee_order_data)) {
			return array(
				"code" => '-102',
				"msg" => 'empty!',
			);	
		}
		return $list_fee_order_data;
	}
	public static function setPlanStatus($plan_id,$new_status){
		$status = course_status::initial;
		if(is_numeric($new_status)){
			if(!empty(course_status::name($new_status))){
				$status = $new_status;
			}else{
				$status = course_status::initial;
			}
		}else{
			$status = course_status::key($new_status);
			if($status===false){
				$status = course_status::initial;
			}
		}
		$db = new course_db;
		$db->updatePlanStatus($plan_id,$status);
		//修改对应的状态
		$plan_info = $db->getPlan($plan_id);
		if(empty($plan_info)){
			return false;
		}
		if($status == course_status::living){
			//把对应的plan,section,course都设置为进行中
			$db->updateCourseStatus($plan_info['course_id'],$status);
			$db->updateSectionStatus($plan_info['section_id'],$status);
			$db->updateClassStatus($plan_info['class_id'],$status);
		}elseif($status==course_status::finished){
			//取出章节下的所有plan，如果都完成，就章节完成
			$plans = $db->planList($plan_info['course_id'],0,0,0,$plan_info['section_id'],0);
			if(!empty($plans->items)){
				$finished=true;
				foreach($plans->items as $item){
					if($item['plan_status']!=course_status::finished){
						$finished=false;
						break;
					}
				}
				if($finished===false){
					//没有上完课把直播状态修改成普通状态
					$db->updateSectionStatus($plan_info['section_id'],course_status::normal);
					$db->updateCourseStatus($plan_info['course_id'],course_status::normal);
					$db->updateClassStatus($plan_info['class_id'],course_status::normal);
				}else{
					$db->updateSectionStatus($plan_info['section_id'],$status);
					//取出课程下所有章节，如果都完成，设置课程为完成
					$sections = $db->sectionList($plan_info['course_id']);
					if(!empty($sections->items)){
						$finished=true;
						foreach($sections->items as $item){
							if($item['status']!=course_status::finished){
								$finished=false;
								break;
							}
						}
						if($finished===false){
							$db->updateCourseStatus($plan_info['course_id'],course_status::normal);
							$db->updateClassStatus($plan_info['class_id'],course_status::normal);
						}else{
							$db->updateCourseStatus($plan_info['course_id'],$status);
							$db->updateClassStatus($plan_info['class_id'],$status);
						}
					}
				}
			}
		}
		return true;
	}
    //设置课程排序
    public function setCourseSort($course_id,$sort_array){
		$course_db = new course_db;
		return  $course_db->setCourseSort($course_id,$sort_array);	
	}	
	public function updateDiscountCodeUsed($order_id, $status){
		$course_db = new course_db;
		$used = $course_db->getDiscountCodeUsedByOrderId($order_id);
		if(!$used || $used["status"] == $status){
			return;
		}
		$course_db->setStatusForDiscountCodeUsedByOrderId($order_id, $status);
		$used2 = $course_db->getDiscountCodeUsedsByCodeId($used["discount_code_id"], 1, 1);
		$course_db->setUsedNumForDiscountCodeById($used["discount_code_id"], $used2->totalSize);
	}
    public function addCourseTop($cid){
		$course_db = new course_db;
		return  $course_db->addCourseTop($cid);	
	}	
    public function delCourseTop($cid){
		$course_db = new course_db;
		return  $course_db->delCourseTop($cid);	
	}	
}

